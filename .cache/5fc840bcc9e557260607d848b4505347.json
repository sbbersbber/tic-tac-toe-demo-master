{"dependencies":[{"name":"./alphabeta.js","loc":{"line":8,"column":15}},{"name":"lodash","loc":{"line":9,"column":14}},{"name":"dot","loc":{"line":10,"column":20}}],"generated":{"js":"\"use strict\";\n\nvar _alphabeta = require(\"./alphabeta.js\");\n\nvar _alphabeta2 = _interopRequireDefault(_alphabeta);\n\nvar _lodash = require(\"lodash\");\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n* @Author: huangteng\r\n* @Date:   2018-04-19 10:25:46\r\n* @Last Modified by:   huangteng\r\n* @Last Modified time: 2018-04-20 17:03:23\r\n* @Description: a simple demo with ai for tic-tac-toe game!\r\n*/\nconst doT = require('dot');\n\n// constant\nconst AI_ROLE = 'o'; // max\nconst PLAYER_ROLE = 'x'; // min\nconst EMPTY_POS = '';\nlet emptyChessBoard = [['', '', ''], ['', '', ''], ['', '', '']];\nlet timer = null;\nlet pos = null;\nlet ai = new _alphabeta2.default(emptyChessBoard, AI_ROLE, 0);\n\n// initGame\nconst initGame = (chessBoard, AI_ROLE) => {\n  render(ai.chessBoard);\n  document.querySelector('#board-root').addEventListener('click', e => {\n    let pos = e.target.getAttribute('data-pos').split(',');\n    if (checkHaveValueAlready(ai.chessBoard, pos)) {\n      renderTip({ show: true, msg: 'here is occupied!' });\n      return;\n    };\n    if (ai.winner) return;\n    drawPlayersRoleInChessBoard(pos);\n    checkWinnerTool();\n    // AI go\n    setTimeout(AIGO, 1000);\n  });\n};\n// when ai go\nconst AIGO = () => {\n  if (ai.winner) return;\n  ai.getHopedScore();\n  ai.next();\n  render(ai.chessBoard);\n  checkWinnerTool();\n};\n\n// check a winner tool func\nconst checkWinnerTool = () => {\n  let winner = ai.checkIfHaveAWinner();\n  if (winner) {\n    let msg = winner === 'draw' ? 'Have A Draw!' : `${winner} Had Won Game!`;\n    renderTip({ show: true, msg });\n    ai.winner = winner;\n  }\n};\n\n// draw player role in chessBoard\nconst drawPlayersRoleInChessBoard = (pos, role = PLAYER_ROLE) => {\n  const board = _lodash2.default.cloneDeep(ai.chessBoard);\n  board[pos[0]][pos[1]] = PLAYER_ROLE;\n  ai.chessBoard = board;\n  render(ai.chessBoard);\n};\n\n// check if have value\nconst checkHaveValueAlready = (chessBoard, pos) => {\n  return chessBoard[pos[0]][pos[1]] === PLAYER_ROLE || chessBoard[pos[0]][pos[1]] === AI_ROLE;\n};\n\n// render\nconst render = board => {\n  let temp = doT.template(document.querySelector(`#chessBoardAITmpl`).text);\n  document.querySelector(`#board-root`).innerHTML = temp(board);\n  document.querySelector(`#tip`).style.display = 'none';\n};\n\nconst renderTip = res => {\n  let temp = doT.template(document.querySelector(`#tipTmpl`).text);\n  document.querySelector(`#tip`).innerHTML = temp(res);\n  document.querySelector(`#tip`).style.display = 'block';\n  timer = setTimeout(() => {\n    timer = null;\n    document.querySelector(`#tip`).style.display = 'none';\n  }, 2000);\n};\n\ninitGame();\ndocument.querySelector('#btn').addEventListener('click', () => {\n  window.location.reload();\n}, false);"},"hash":"21f6d084a6fa0b960839ea4afc0f5d7b"}